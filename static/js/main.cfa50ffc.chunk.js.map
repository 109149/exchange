{"version":3,"sources":["components/textField/CurrencyTextField.js","components/buttons/convert/ConvertButton.js","components/buttons/theme/ThemeIconButton.js","components/text/header/Header.js","components/animation/splash/SplashScreen.js","components/app/logic/index.js","components/app/hooks/index.js","components/app/App.js","index.js"],"names":["CurrencyTextField","props","currencies","current","handleValueChange","handleCurrencyChange","style","onClick","classes","labelWidth","formControl","name","value","symbol","error","errorText","isError","FormControl","className","variant","InputLabel","htmlFor","OutlinedInput","id","onChange","event","endAdornment","InputAdornment","position","TextField","select","map","currency","MenuItem","Grid","container","alignItems","justify","item","src","flag","alt","startAdornment","FormHelperText","ConvertButton","color","icon","text","size","Button","startIcon","ThemeIconButton","isDark","IconButton","Header","component","Typography","SplashScreen","minHeight","CircularProgress","getConvertButton","calculate","arrowDirection","width","args","isWidthUp","useStyles","makeStyles","theme","root","flexGrow","margin","spacing","widthoutLabel","marginTop","textField","gridItem","textAlign","App","initialValue","React","useReducer","state","newTheme","localStorage","setItem","useTheme","getItem","themeType","setThemeType","useMemo","createMuiTheme","palette","type","initialState","window","innerWidth","useState","setWidth","useEffect","handleWidthChange","target","outerWidth","addEventListener","removeEventListener","useWindowResize","setArrowDirection","base","setBase","fx","setFx","from","to","setCurrencies","getFlag","country","getSymbol","currencySymbols","dateNow","Date","toLocaleDateString","split","reverse","join","fetch","getRates","then","response","json","data","rates","resultRates","Object","entries","rate","slice","push","filter","sort","a","b","localeCompare","prev","date","find","catch","err","console","handleLastSelected","prop","_new","set","newBase","direction","updateArrowDirection","Number","_error","cb","updateValue","tmp","newCurrency","elem","updateCurrency","ThemeProvider","CssBaseline","keys","length","xs","sm","md","lastSelected","entry","inputValue","isNaN","newValue","calculateHandler","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfa50ffc.chunk.js","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./CurrencyTextField.css\";\n// import PropTypes from \"prop-types\";\n\nconst CurrencyTextField = (props) => {\n  const {\n    currencies,\n    current,\n    handleValueChange,\n    handleCurrencyChange,\n    style,\n    onClick,\n  } = props;\n  const { classes, labelWidth } = style;\n  const { formControl } = classes;\n  const { name, value, symbol } = current;\n  const { errorText, isError } = current.error;\n\n  return (\n    <FormControl className={formControl} variant=\"outlined\">\n      <InputLabel htmlFor={`${name}-currency-value`}>{name}</InputLabel>\n      <OutlinedInput\n        id={`${name}-currency-value`}\n        value={value}\n        className=\"textField\"\n        onChange={(event) => {\n          handleValueChange(event);\n          onClick(event);\n        }}\n        error={isError}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <TextField\n              id={`${name}-select`}\n              select\n              value={name}\n              onChange={handleCurrencyChange}\n              className=\"selectField\"\n            >\n              {currencies.map((currency) => {\n                return (\n                  <MenuItem\n                    id={`${currency.name}-select-as-new-${name}`}\n                    key={currency.name}\n                    value={currency.name}\n                  >\n                    <div className=\"selectFieldText\">\n                      <Grid container alignItems=\"center\" justify=\"center\">\n                        <Grid item>\n                          <img\n                            className=\"flagImage\"\n                            src={currency.flag}\n                            alt={`${currency.name}-flag`}\n                          />\n                        </Grid>\n                        <Grid item>{currency.name}</Grid>\n                      </Grid>\n                    </div>\n                  </MenuItem>\n                );\n              })}\n            </TextField>\n          </InputAdornment>\n        }\n        startAdornment={\n          <InputAdornment position=\"start\">{symbol}</InputAdornment>\n        }\n        labelWidth={labelWidth || 55}\n      />\n      <FormHelperText id={`${name}-helper-text`}>{errorText}</FormHelperText>\n    </FormControl>\n  );\n};\n\n// const _c = PropTypes.shape({\n//   name: PropTypes.string,\n//   flag: PropTypes.string,\n//   symbol: PropTypes.string,\n//   value: PropTypes.string,\n//   error: PropTypes.shape({\n//     isError: PropTypes.bool,\n//     errorText: PropTypes.string,\n//   }),\n// });\n\n// CurrencyTextField.propTypes = {\n//   currencies: PropTypes.arrayOf(_c),\n//   current: _c,\n//   handleValueChange: PropTypes.func,\n//   handleCurrencyChange: PropTypes.func,\n//   onClick: PropTypes.func,\n//   style: PropTypes.object,\n// };\n\nexport default CurrencyTextField;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst ConvertButton = (props) => {\n  const {\n    onClick,\n    color,\n    icon,\n    text,\n    variant = \"contained\",\n    size = \"large\",\n  } = props;\n\n  return (\n    <Button\n      onClick={onClick}\n      variant={variant}\n      color={color}\n      size={size}\n      startIcon={icon}\n    >\n      {text}\n    </Button>\n  );\n};\n\nexport default ConvertButton;\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Brightness5Icon from \"@material-ui/icons/Brightness5\"; // sun\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\"; // moon\n\nconst ThemeIconButton = ({ isDark, onClick }) => {\n  return (\n    <IconButton onClick={onClick}>\n      {isDark ? <Brightness5Icon /> : <Brightness4Icon />}\n    </IconButton>\n  );\n};\n\nexport default ThemeIconButton;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Header = ({ text, variant = \"h5\", component = \"h1\" }) => {\n  return (\n    <Typography variant={variant} component={component}>\n      {text}\n    </Typography>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst SplashScreen = () => {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Grid item>\n        <CircularProgress />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SplashScreen;\n","import React from \"react\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport { isWidthUp } from \"@material-ui/core/withWidth\";\nimport { ConvertButton } from \"../../\";\n\nconst calculateHandler = (base, currencies, setCurrencies) => {\n  let from, to, lastSelected;\n  if (currencies.from && currencies.to) {\n    from = Object.entries(currencies).find((entry) => entry[1].name === base);\n    to = Object.entries(currencies).find((entry) => entry[1].name !== base);\n  }\n\n  if (from && to) {\n    lastSelected = from[0];\n    from = from[1];\n    to = to[1];\n\n    let inputValue = Number(from.value);\n    if (!isNaN(inputValue)) {\n      let newValue = inputValue * to[to.name];\n      let error = { isError: false, errorText: \"\" };\n      setCurrencies((prev) => ({\n        from: {\n          ...prev.from,\n          value: from.name === prev.from.name ? inputValue : newValue,\n          error,\n        },\n        to: {\n          ...prev.to,\n          value: from.name === prev.to.name ? inputValue : newValue,\n          error,\n        },\n      }));\n    } else {\n      let error = {\n        isError: true,\n        errorText: \"value must be a number\",\n      };\n      setCurrencies((prev) => ({\n        ...prev,\n        [lastSelected]: { ...prev[lastSelected], error },\n      }));\n    }\n  }\n};\n\nconst updateArrowDirection = (prop, direction, set) => {\n  if (prop === \"from\" && direction !== \"right\") {\n    set(\"right\");\n  } else if (prop === \"to\" && direction !== \"left\") {\n    set(\"left\");\n  }\n};\n\nconst updateBase = (current, _new, set) => {\n  if (_new !== current) {\n    set(_new); // set base currency, which is the last selected currency\n  }\n};\n\nconst updateValue = (error, value, cb, prop, current) => {\n  // if current input has no error, we don't care if there is any in opposite one\n  if (!error.isError) {\n    cb((prev) => ({\n      from: {\n        ...prev.from,\n        error: {\n          isError: false,\n          errorText: \"\",\n        },\n      },\n      to: {\n        ...prev.to,\n        error: {\n          isError: false,\n          errorText: \"\",\n        },\n      },\n      [prop]: { ...current, value, error },\n    }));\n  } else {\n    cb((prev) => ({\n      ...prev,\n      [prop]: { ...current, value, error },\n    }));\n  }\n};\n\nconst updateCurrency = (prop, rates, value, currencies, set) => {\n  // swap currencies if currently selected matches the opposite one.\n  if (\n    (prop === \"from\" && value === currencies.to.name) ||\n    (prop === \"to\" && value === currencies.from.name)\n  ) {\n    let tmp = currencies[\"from\"];\n    set({ from: currencies[\"to\"], to: tmp });\n  } else {\n    const newCurrency = rates.find((elem) => elem.name === value);\n    set({ ...currencies, [prop]: newCurrency });\n  }\n};\n\nfunction getConvertButton(props) {\n  let { calculate, arrowDirection, width } = props;\n\n  if (width <= 960) width = \"md\";\n\n  // default\n  let onClick = calculate;\n  let color = \"primary\";\n  let icon = <KeyboardArrowDownIcon />;\n  let text = \"Convert\";\n\n  let args = {\n    onClick,\n    color,\n    icon,\n    text,\n  };\n\n  if (isWidthUp(\"md\", width)) {\n    if (arrowDirection === \"left\") {\n      args.color = \"secondary\";\n      args.icon = <KeyboardArrowUpIcon />;\n    }\n  } else {\n    if (arrowDirection === \"right\") {\n      args.icon = <KeyboardArrowRightIcon />;\n    } else {\n      args.color = \"secondary\";\n      args.icon = <KeyboardArrowLeftIcon />;\n    }\n  }\n\n  return <ConvertButton {...args} />;\n}\n\nexport {\n  calculateHandler,\n  updateArrowDirection,\n  updateBase,\n  updateValue,\n  updateCurrency,\n  getConvertButton,\n};\n","import React from \"react\";\n// import currencySymbols from \"../../../data/currencySymbols.json\";\n\n/**\n * @author 109149\n * @time Wed 24 Feb 2021 16:13:05 +04\n *\n * {Hook} Handles window size change. Adds and removes event listener on window.\n *\n * @param {String} initialState is width of window.\n * @returns {Number} width that is the width of resized window.\n */\nconst useWindowResize = (initialState = window.innerWidth) => {\n  const [width, setWidth] = React.useState(initialState);\n\n  React.useEffect(() => {\n    function handleWidthChange(event) {\n      setWidth(event.target.outerWidth);\n    }\n\n    window.addEventListener(\"resize\", handleWidthChange);\n    return () => window.removeEventListener(\"resize\", handleWidthChange);\n  }, []);\n\n  return width;\n};\n\n/**\n * @author 109149\n * @time Wed 24 Feb 2021 16:09:42 +04\n *\n * {Hook} Handles dark mode toggling.\n *\n * @param {String} initialValue is one of the following \"dark\" or \"light\"\n * @returns tuple [state, dispatch]\n */\nconst useTheme = (initialValue = \"dark\") => {\n  return React.useReducer((state) => {\n    let newTheme = state === \"dark\" ? \"light\" : \"dark\";\n    localStorage.setItem(\"theme-type\", newTheme);\n    return newTheme;\n  }, initialValue);\n};\n\nexport { useTheme, useWindowResize };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CurrencyTextField, ThemeIconButton, Header, SplashScreen } from \"../\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  calculateHandler,\n  updateArrowDirection,\n  updateBase,\n  updateValue,\n  updateCurrency,\n  getConvertButton,\n} from \"./logic\";\nimport { useTheme, useWindowResize } from \"./hooks\";\nimport \"./App.css\";\n\nimport currencySymbols from \"../../data/currencySymbols.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  widthoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: (props) => props.width,\n  },\n  gridItem: {\n    textAlign: \"center\",\n    justify: \"center\",\n  },\n}));\n\nfunction App() {\n  const [themeType, setThemeType] = useTheme(\n    localStorage.getItem(\"theme-type\") ?? \"dark\"\n  );\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: themeType,\n        },\n      }),\n    [themeType]\n  );\n\n  const width = useWindowResize();\n  const classes = useStyles({ width: \"30ch\" });\n  const [arrowDirection, setArrowDirection] = React.useState(\"right\");\n  const [base, setBase] = React.useState(\"CAD\");\n  const [fx, setFx] = React.useState({});\n  const [currencies, setCurrencies] = React.useState({\n    from: {},\n    to: {},\n  });\n\n  React.useEffect(() => {\n    const getFlag = (country) =>\n      `https://www.countryflags.io/${country}/flat/32.png`;\n    const getSymbol = (currency) => currencySymbols[currency].symbol;\n    const getRates = (base) =>\n      `https://api.exchangeratesapi.io/latest?base=${base}`;\n\n    let dateNow = new Date()\n      .toLocaleDateString()\n      .split(\"/\")\n      .reverse()\n      .join(\"-\");\n    fetch(getRates(base))\n      .then((response) => response.json())\n      .then((data) => {\n        /* rates, base, date, error */\n        const currencies = data.rates;\n        const resultRates = [];\n        for (const [currency, rate] of Object.entries(currencies)) {\n          let country = currency.slice(0, 2);\n          resultRates.push({\n            [currency]: rate,\n            name: currency,\n            flag: getFlag(country),\n            value: \"\",\n            symbol: getSymbol(currency),\n            error: {\n              isError: false,\n              errorText: \"\",\n            },\n            country,\n          });\n        }\n        resultRates\n          .filter((rate) => rate.name !== \"EUR\") // Idk what's wrong with EUR\n          .sort((a, b) => a.name.localeCompare(b.name));\n\n        setFx((prev) => ({\n          // ...prev,\n          rates: resultRates,\n          date: dateNow,\n          base,\n        }));\n\n        // console.log(\"setting\");\n        setCurrencies((prev) => {\n          if (prev.from.name && prev.to.name) {\n            return {\n              from: {\n                ...resultRates.find((rate) => rate.name === prev.from.name),\n                value: prev.from.value,\n                error: prev.from.error,\n              },\n              to: {\n                ...resultRates.find((rate) => rate.name === prev.to.name),\n                value: prev.to.value,\n                error: prev.to.error,\n              },\n            };\n          }\n          return {\n            from: resultRates[0],\n            to: resultRates[1],\n          };\n        });\n\n        // console.log(\"fetched length\", resultRates.length);\n      })\n      .catch((err) => console.error(err));\n  }, [base]);\n\n  const calculate = (event) => {\n    calculateHandler(base, currencies, setCurrencies);\n  };\n\n  const handleLastSelected = (prop) => (event) => {\n    let newBase = event.target.id.split(\"-\")[0];\n\n    updateArrowDirection(prop, arrowDirection, setArrowDirection);\n    updateBase(fx.base, newBase, setBase);\n  };\n\n  const handleValueChange = (prop) => (event) => {\n    const current = currencies[prop];\n    const value = Number(event.target.value);\n    let _error = current.error;\n\n    // eslint-disable-next-line no-self-compare\n    if (value !== value || !value) {\n      // test against NaN && undefined && null\n      _error.isError = true;\n      _error.errorText = \"value must be a number\";\n    } else {\n      _error.isError = false;\n      _error.errorText = \"\";\n    }\n\n    updateValue(_error, event.target.value, setCurrencies, prop, current);\n  };\n\n  const handleCurrencyChange = (prop) => (event) => {\n    updateCurrency(\n      prop,\n      fx.rates,\n      event.target.value,\n      currencies,\n      setCurrencies\n    );\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {fx.rates &&\n      Object.keys(currencies.from).length > 0 &&\n      Object.keys(currencies.to).length > 0 ? (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{ minHeight: \"30vh\" }}\n          >\n            <Grid item xs={12}>\n              <ThemeIconButton\n                onClick={setThemeType}\n                isDark={themeType === \"dark\"}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.gridItem}>\n              <Header text=\"Exchange\" />\n            </Grid>\n            <Grid item xs={12} sm={12} md={5} className={classes.gridItem}>\n              <CurrencyTextField\n                className={classes.gridItem}\n                onClick={handleLastSelected(\"from\")}\n                currencies={fx.rates}\n                current={currencies.from}\n                handleValueChange={handleValueChange(\"from\")}\n                handleCurrencyChange={handleCurrencyChange(\"from\")}\n                style={{\n                  labelWidth: 55,\n                  classes: {\n                    formControl: classes.margin,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={2} className={classes.gridItem}>\n              {getConvertButton({\n                arrowDirection,\n                calculate,\n                width,\n              })}\n            </Grid>\n            <Grid item xs={12} sm={12} md={5} className={classes.gridItem}>\n              <CurrencyTextField\n                className={classes.gridItem}\n                onClick={handleLastSelected(\"to\")}\n                currencies={fx.rates}\n                current={currencies.to}\n                handleValueChange={handleValueChange(\"to\")}\n                handleCurrencyChange={handleCurrencyChange(\"to\")}\n                style={{\n                  labelWidth: 55,\n                  classes: {\n                    formControl: classes.margin,\n                  },\n                }}\n              />\n            </Grid>\n          </Grid>\n        </div>\n      ) : (\n        <SplashScreen />\n      )}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}